/'
    Copyright 2020 Intel Corporation
    Copyright IBM Corp. All Rights Reserved.

    SPDX-License-Identifier: Apache-2.0
'/

@startuml

'- force wrapping of longer text
'skinparam wrapWidth 400

!pragma teoz true

hide footbox
title Foot Box removed

title Fabric Private Chaincode - Transaction validation using FPC validation plugin

actor "User Org1" as User1 order 9

participant "Peer Org1" as ECC1 order 30
participant "Peer Org2" as ECC2 order 60
participant "Peer Org3" as ECC3 order 70

entity Orderer order 100

note right User1
NOTE This validation flow only supports designated peer
endorsement policy as specified for MVP. That is, this
validation design will be replaced in the future with
MSP-based validation.
end note

ref over User1, Orderer
    install, approve, commit chaincode definition (ECC_MR)
    see fpc-lifecycle-v2.puml
end ref

ref over User1, Orderer
    register enclaves and key-dist
    see fpc-registration.puml and fpc-key-dist.puml
end ref

group endorsement
    activate User1

    User1 -> ECC1 ++: send proposal
    ref over ECC1
        invoke chaincode enclave
        see fpc-cc-invocation.puml
    end ref
    return proposal response


    User1 -> User1 : form transaction

    User1 -> Orderer++ : send transaction
    deactivate User1

end group

    group collect transactions
        ...
        Orderer -> Orderer : form block
    end group

    Orderer -> ECC1+ : broadcast
    & Orderer -> ECC2+ : broadcast
    & Orderer -> ECC3+ : broadcast
    deactivate Orderer

    group validation & commit
        ECC1 -> ECC1 : validate block signature
        loop for each tx in block

            note over ECC1
                For every FPC transaction, we first perform
                default validation and then FPC validation
            end note

            group default validation
                ECC1 -> ECC1 : perform default validation
                ECC1 -> ECC1 : validate tx (client) signature
                ECC1 -> ECC1 : MVCC check
                ECC1 -> ECC1 : validate endorsements
            end

            group fpc-vscc
                note over ECC1
                     fpc-vscc is a validation plugin associated with each FPC Chaincode.
                     Any failure below will result in an invalidation of the transaction.
                end note
                alt  MVP
                  ECC1 -> ECC1 : <args, read/writeset, result> <- extract from transaction
                  ECC1 -> ECC1 : <Enclave_VK, Sig_Enclave, ECC_result> <- extract from result

                  ECC1 -> ECC1 : verify Sig_Enclave over <args, read/writeset, ECC_result> with Enclave_VK

                  create participant ERCC order 30
                  ECC1 -> ERCC++ : queryECCInfo(CC_Id, Hash(Enclave_VK))
                  note right
                      If FPC enclave is registered, ERCC will return the corresponding
                      Credentials.Attestated_Data.CC_Parameters;
                      otherwise CC_Parameters is empty.
                  end note
                  return CC_Parameters

              else Post-MVP: Validation
                  note right of ECC1
                      The enclave's signature was already verified against the (enclave's) PeerCertificate.
                  end note

                  ECC1 -> ERCC++ : queryECCInfo(CC_Id, Hash(PeerCertificate.Public_key))
                  return CC_Parameters
              end

              ECC1 -> ECC1 : check CC_Parameters matches chaincode definition
              ECC1 -> ECC1 : check CC_Parameters.MSPID matches MSPID of endorser
              note right of ECC1
                This ensures that the Orgs used when evaluating  endorsement policies during
                 the default validation matches the organization having taken "ownership" over
                 the particular FPC Chaincode enclave.
              end note
            end
        end loop

        loop for each tx in block
           ECC1 -> ECC1 : apply valid tx writeset
        end loop

        ECC1 -> ECC1 : append block to ledger

        create "Ledger_enclave Peer_Org1" as TLCC1 order 31 #99FF99
        ECC1 -> TLCC1 ++ : new block
        deactivate ECC1
        |||
        ref over TLCC1
            validation & commit
        end ref
        note over TLCC1
            Ledger enclave performs the same
            validation steps as the peer does.
            This is necessary to let the ledger
            enclave establish its own trusted
            view of the ledger.
        end note
        TLCC1 -> TLCC1 : compute and store integrity-metadata for the invoked FPC chaincode's writeset
        |||
        deactivate TLCC1
        |||

    end group
    |||



    ref over ECC2
        validation & commit
    end ref
    |||
    deactivate ECC2

    ref over ECC3
        validation & commit
    end ref
    |||
    deactivate ECC3


@enduml
