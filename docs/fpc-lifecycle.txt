@startuml
actor	Client1
'actor	Client2
entity	Peer1
'entity	Peer2
database Ledger

group System setup

   Client1 -> Peer1 : start
   Client1 -> Peer2 : start

   Client1 -> Peer1 : channel create

   Client1 -> Peer1 : channel join
   note right
   	ercc et al. installed and instantiated (as channel creator),
   	transparently to clients
   end note
   Client1 -> Peer2 : channel join
   note right
   	ercc et al. installed (but not instantiated)
   	transparently to clients

	Q: could we potentially embedd this in
	   channel (genneration) block? This
	   would simplify flow ..
   end note

end

group Per FPC chaincode FCC

   Client1 -> Peer1 : chaincode install FCC
   note right
   	create (override) run-container,
   	potentiall/eventually also build container
   	if artifact is source (as other Fabric CC)
   end note
   Client1 -> Peer2 : chaincode install FCC

   Client1 -> Peer1 : chaincode instantiate FCC
   note right
      Instantiate should only be done by one client but other peers
      also should have enclaves. Can we do that transparently or do we
      need a different admin call?
   end note

   loop
      Client1 -> Peer1 : chaincode [query | invoke ] FCC
      note right
      	   Q: who handles gathering endorsements for invoke?
	   Q: query served from local ledger-state without transaction?
      end note
      Client1 <- Peer1 : result
   end
end

@enduml

