/*
 * Copyright IBM Corp. All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

enclave {
    from "sgx_tstdc.edl" import *;
    from "common.edl" import *;

    trusted {
        public int ecall_bind_tlcc(
                [in] const sgx_report_t *report,
                [in, size=64] const uint8_t *pubkey);

        public int ecall_cc_invoke(
                [in, string] const char *encoded_args,
                [in, string] const char *pk,
                [out, size=response_len_in] uint8_t *response, uint32_t response_len_in,
                [out] uint32_t *response_len_out,
                [out] sgx_ec256_signature_t *signature,
                [user_check] void *u_shim_ctx);

    };

    untrusted {
        void ocall_get_creator_name(
                [out, size=max_msp_id_len] char *msp_id, uint32_t max_msp_id_len,
                [out, size=max_dn_len] char *dn, uint32_t max_dn_len,
                [user_check] void *u_shim_ctx);

        void ocall_get_state(
                [in, string] const char *key,
                [out, size=max_val_len] uint8_t *val, uint32_t max_val_len, [out] uint32_t *val_len,
                [in, out] sgx_cmac_128bit_tag_t *cmac,
                [user_check] void *u_shim_ctx);

        void ocall_put_state(
                [in, string] const char *key,
                [in, size=val_len] uint8_t *val, uint32_t val_len,
                [user_check] void *u_shim_ctx);

        void ocall_get_state_by_partial_composite_key(
                [in, string] const char *comp_key,
                [out, size=max_len] uint8_t *values, uint32_t max_len, [out] uint32_t *values_len,
                [in, out] sgx_cmac_128bit_tag_t *cmac,
                [user_check] void *u_shim_ctx);
    };

};
