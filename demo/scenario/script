# Copyright 2019 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
#

#  Scripted scenario
#  (to be excuted by demo/client/scripting/scenario-run.sh)
#------------------------------------------------------------

scenario

# create auction
submit Auctioneer1 createAuction

wait "Auction Created. Maybe show auctioneers auction view?  (Hit any key to continue)"

# clock-rounds ...
submit Auctioneer1 startNextRound
delay 2 randomized

submit A-Telecom submitClockBid
delay 2 randomized
submit B-Net submitClockBid
delay 2 randomized
submit C-Mobile submitClockBid
delay 2 randomized
submit Auctioneer1 endRound

say "End Round 1"
delay 1 randomized

submit Auctioneer1 startNextRound
delay 2 randomized
submit A-Telecom submitClockBid
delay 2 randomized
submit B-Net submitClockBid
delay 2 randomized
submit C-Mobile submitClockBid
delay 2 randomized
submit Auctioneer1 endRound

yell "End Round 2"
delay 1 randomized

submit Auctioneer1 startNextRound
delay 2 randomized
submit_manual C-Mobile submitClockBid
delay 2 randomized
submit A-Telecom submitClockBid
delay 2 randomized
submit B-Net submitClockBid
delay 2 randomized
submit Auctioneer1 endRound

say "End Round 3"
delay 1 randomized

submit Auctioneer1 startNextRound
delay 2 randomized
submit A-Telecom submitClockBid
delay 2 randomized
submit B-Net submitClockBid
delay 2 randomized
submit C-Mobile submitClockBid
delay 2 randomized
submit_manual Auctioneer1 endRound

say "End Round 4 - Clock Phase Complete"

# assignment rounds ...
# bidding not yet implemented, add here once done and
# uncomment below startNextRound and endRound (Note: last endRound in clock
# phase immediately assigns (randomly) the slots and terminates the phase)

# submit Auctioneer1 startNextRound
# submit Auctioneer1 endRound

yell "Assignment Phase Complete"

say "Publish results on the ledger"

submit Auctioneer1 publishAssignmentResults

yell "Auction closed"

# auction is closed ...
