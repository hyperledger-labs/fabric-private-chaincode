// Code generated by counterfeiter. DO NOT EDIT.
package fakes

import (
	"sync"

	gatewaya "github.com/hyperledger/fabric-sdk-go/pkg/gateway"
)

type Network struct {
	GetContractStub        func(string) *gatewaya.Contract
	getContractMutex       sync.RWMutex
	getContractArgsForCall []struct {
		arg1 string
	}
	getContractReturns struct {
		result1 *gatewaya.Contract
	}
	getContractReturnsOnCall map[int]struct {
		result1 *gatewaya.Contract
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *Network) GetContract(arg1 string) *gatewaya.Contract {
	fake.getContractMutex.Lock()
	ret, specificReturn := fake.getContractReturnsOnCall[len(fake.getContractArgsForCall)]
	fake.getContractArgsForCall = append(fake.getContractArgsForCall, struct {
		arg1 string
	}{arg1})
	stub := fake.GetContractStub
	fakeReturns := fake.getContractReturns
	fake.recordInvocation("GetContract", []interface{}{arg1})
	fake.getContractMutex.Unlock()
	if stub != nil {
		return stub(arg1)
	}
	if specificReturn {
		return ret.result1
	}
	return fakeReturns.result1
}

func (fake *Network) GetContractCallCount() int {
	fake.getContractMutex.RLock()
	defer fake.getContractMutex.RUnlock()
	return len(fake.getContractArgsForCall)
}

func (fake *Network) GetContractCalls(stub func(string) *gatewaya.Contract) {
	fake.getContractMutex.Lock()
	defer fake.getContractMutex.Unlock()
	fake.GetContractStub = stub
}

func (fake *Network) GetContractArgsForCall(i int) string {
	fake.getContractMutex.RLock()
	defer fake.getContractMutex.RUnlock()
	argsForCall := fake.getContractArgsForCall[i]
	return argsForCall.arg1
}

func (fake *Network) GetContractReturns(result1 *gatewaya.Contract) {
	fake.getContractMutex.Lock()
	defer fake.getContractMutex.Unlock()
	fake.GetContractStub = nil
	fake.getContractReturns = struct {
		result1 *gatewaya.Contract
	}{result1}
}

func (fake *Network) GetContractReturnsOnCall(i int, result1 *gatewaya.Contract) {
	fake.getContractMutex.Lock()
	defer fake.getContractMutex.Unlock()
	fake.GetContractStub = nil
	if fake.getContractReturnsOnCall == nil {
		fake.getContractReturnsOnCall = make(map[int]struct {
			result1 *gatewaya.Contract
		})
	}
	fake.getContractReturnsOnCall[i] = struct {
		result1 *gatewaya.Contract
	}{result1}
}

func (fake *Network) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getContractMutex.RLock()
	defer fake.getContractMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *Network) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}
